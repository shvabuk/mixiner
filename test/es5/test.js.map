{"version":3,"sources":["test.js"],"names":["__decorate","decorators","target","key","desc","c","arguments","length","r","Object","getOwnPropertyDescriptor","d","Reflect","decorate","i","defineProperty","exports","value","tests","mixiner","assert","version","describe","Mixin1","Mixin2","Parent","it","strictEqual","VERSION","Test","t","test","method","method1","method2"],"mappings":"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","file":"test.js","sourcesContent":["\"use strict\";\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.tests = (mixiner, assert, version) => {\n    describe('Mixiner functionality', () => {\n        // interface IMixin2 {\n        //   method(): boolean;\n        //   method2(): number;\n        // }\n        class Mixin1 {\n            method() {\n                return false;\n            }\n            method1() {\n                return 1;\n            }\n        }\n        class Mixin2 {\n            method() {\n                return true;\n            }\n            method2() {\n                return 2;\n            }\n        }\n        class Parent {\n            method() {\n                return false;\n            }\n            parentMethod() {\n                return true;\n            }\n        }\n        describe('mixiner options', () => {\n            it('has correct version', () => {\n                assert.strictEqual('string', typeof mixiner.VERSION);\n                assert.strictEqual(version, mixiner.VERSION);\n            });\n        });\n        describe('class without parent', () => {\n            it('has one mixin', () => {\n                let Test = class Test {\n                    test() {\n                        return 'test';\n                    }\n                };\n                Test = __decorate([\n                    mixiner(Mixin1)\n                ], Test);\n                const t = new Test;\n                assert.strictEqual('test', t.test());\n                assert.strictEqual(false, t.method());\n                assert.strictEqual(1, t.method1());\n            });\n            it('has two mixins', () => {\n                let Test = class Test {\n                    test() {\n                        return 'test';\n                    }\n                };\n                Test = __decorate([\n                    mixiner(Mixin2),\n                    mixiner(Mixin1)\n                ], Test);\n                const t = new Test;\n                assert.strictEqual('test', t.test());\n                assert.strictEqual(true, t.method());\n                assert.strictEqual(1, t.method1());\n                assert.strictEqual(2, t.method2());\n            });\n        });\n        describe('class with parent', () => {\n            it('has one mixin', () => {\n                let Test = class Test extends Parent {\n                    test() {\n                        return 'test';\n                    }\n                };\n                Test = __decorate([\n                    mixiner(Mixin1)\n                ], Test);\n                const t = new Test;\n                assert.strictEqual('test', t.test());\n                assert.strictEqual(false, t.method());\n                assert.strictEqual(1, t.method1());\n            });\n            it('has two mixins', () => {\n                let Test = class Test extends Parent {\n                    test() {\n                        return 'test';\n                    }\n                };\n                Test = __decorate([\n                    mixiner(Mixin2),\n                    mixiner(Mixin1)\n                ], Test);\n                const t = new Test;\n                assert.strictEqual('test', t.test());\n                assert.strictEqual(true, t.method());\n                assert.strictEqual(1, t.method1());\n                assert.strictEqual(2, t.method2());\n            });\n        });\n    });\n};\n"]}
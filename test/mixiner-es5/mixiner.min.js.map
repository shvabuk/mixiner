{"version":3,"sources":["mixiner.js"],"names":["root","factory","define","amd","module","_typeof","exports","mixiner","VERSION","Error","window","this","getOwnPropsKeys","target","keys","Object","collection","getOwnPropertySymbols","concat","defineProps","mixin","options","type","mixinNames","targetNames","ignore","ignoreProtoProps","ignoreStaticProps","ignoreInstanceProps","i","length","indexOf","resolve","propertyName","assignClasses","has","call","parentMixins","_mixins_","defineProperty","forEach","parentMixin","prototype","assign","configurable","value","writable","source","mixIn","parent","mixins","_mixinInstance_","MixinsWrapper","_ref","_this2","_ret","_classCallCheck","_len","arguments","args","Array","_key","out","_possibleConstructorReturn","_inherits","len","mixedBy","instance","ctor","getProto","constructor","Mixins","_createClass","key","push","getPrototypeOf","obj","__proto__","hasOwnProperty","getOwnPropertyDescriptor","config","mix","_len2","_key2","extend","opts","instanceOf","_len3","_key3","_len5","_key5","_ref2","default","resolveConflict","split","map","parseInt","newParts","oldParts"],"mappings":"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","file":"mixiner.min.js","sourcesContent":["/**\n * @license\n * Mixiner <https://shvabuk.github.io/mixiner>\n * Released under MIT license <https://shvabuk.github.io/mixiner/LICENSE.txt>\n * Copyright Shvab Ostap\n */\n\n((root, factory) => {\n  if (typeof define === 'function' && define.amd) {\n    // AMD\n    define([], factory);\n  } else if (typeof module === 'object' && module.exports) {\n    // Node. CommonJS-like\n    const mixiner = factory();\n    module.exports = mixiner;\n    // CommonJS exports\n    module.exports.mixiner = mixiner;\n  } else {\n    const mixiner = factory();\n\n    if (typeof root.mixiner === 'undefined') {\n      root.mixiner = mixiner;\n    } else if (\n      // duck type checking\n      typeof root.mixiner === 'object' &&\n      typeof root.mixiner.VERSION === 'string' &&\n      typeof root.mixiner.Mixins === 'function'\n    ) {\n      root.mixiner = mixiner.resolveConflict(root);\n    } else {\n      throw Error(`Global scope property \"mixiner\" alredy in use`);\n    }\n  }\n})(typeof window !== 'undefined' ? window : this, () => {\n\n\"use strict\";\nconst VERSION = '1.0.0';\n// storage of mixins, defined in constructor._mixins_\n/* export */ class Mixins {\n    constructor() {\n        this.collection = [];\n        this.VERSION = VERSION;\n    }\n    add(mixin) {\n        this.collection.push(mixin);\n    }\n    setParent(mixins) {\n        this.parent = mixins;\n    }\n    has(mixin) {\n        return (this.collection.indexOf(mixin) > -1 ||\n            (typeof this.parent !== 'undefined' && this.parent.has(mixin)));\n    }\n}\n// get object prototype\nconst getProto = Object.getPrototypeOf || (obj => obj.__proto__);\n// get props names, used in mixin\nfunction getOwnPropsKeys(target) {\n    const keys = Object.getOwnPropertyNames(target);\n    if (typeof Object.getOwnPropertySymbols !== 'undefined') {\n        return [].concat(keys, Object.getOwnPropertySymbols(target));\n    }\n    return keys;\n}\n// define mixin (static, prototype or instance) properties\nfunction defineProps(target, mixin, options, type) {\n    const mixinNames = getOwnPropsKeys(mixin);\n    const targetNames = getOwnPropsKeys(target);\n    const ignore = type === 'proto'\n        ? options.ignoreProtoProps\n        : type === 'static' ? options.ignoreStaticProps : options.ignoreInstanceProps;\n    let i = mixinNames.length;\n    while (i--) {\n        // ignore props from ignorelist\n        if (ignore.indexOf(mixinNames[i]) > -1) {\n            continue;\n        }\n        // check conflicts\n        // custom resolve\n        if (targetNames.indexOf(mixinNames[i]) > -1) {\n            options.resolve({\n                target,\n                mixin,\n                options,\n                type,\n                propertyName: mixinNames[i],\n            });\n        }\n        else {\n            // default define\n            options.define(target, mixin, mixinNames[i]);\n        }\n    }\n}\n// wrapper according to https://github.com/airbnb/javascript#objects--prototype-builtins\nconst has = Object.prototype.hasOwnProperty;\n// define static and prototype properties\nfunction assignClasses(target, mixin, options) {\n    // add mixins links\n    if (!has.call(target, '_mixins_')) {\n        const parentMixins = target._mixins_;\n        Object.defineProperty(target, '_mixins_', {\n            value: new Mixins(),\n            configurable: true,\n            writable: true,\n        });\n        if (typeof parentMixins !== 'undefined') {\n            target._mixins_.setParent(parentMixins);\n        }\n    }\n    // add mixined in mixin mixins\n    if (typeof mixin._mixins_ === 'object' && Array.isArray(mixin._mixins_.collection)) {\n        mixin._mixins_.collection.forEach((parentMixin) => assignClasses(target, parentMixin, options));\n    }\n    // copy prototype properties\n    defineProps(target.prototype, mixin.prototype, options, 'proto');\n    // copy constructor properties\n    defineProps(target, mixin, options, 'static');\n    target._mixins_.add(mixin);\n}\n// copy options properties, just primitive Object.assign polyfill for IE9\nfunction assign(target, source) {\n    const keys = Object.keys(source);\n    let i = keys.length;\n    while (i--) {\n        target[keys[i]] = source[keys[i]];\n    }\n    return target;\n}\n// mixin function\n// at this moment loop inside of constructor increse object creation speed\n// during V8 engine optimization\nfunction mixIn(options, mixins, parent) {\n    const len = mixins.length;\n    let i = -1;\n    let target;\n    if (typeof parent === 'undefined') {\n        target = class MixinsWrapper {\n            constructor() {\n                mixins.forEach((mixin) => {\n                    // copy instance properties\n                    // mixins[i].apply(this) does not work in ES2015+ classes\n                    if (typeof mixin._mixinInstance_ === 'undefined') {\n                        mixin._mixinInstance_ = new mixin();\n                    }\n                    defineProps(this, mixin._mixinInstance_, options, 'instance');\n                });\n            }\n        };\n    }\n    else {\n        // ignore first mixin, it is parent class\n        target = class MixinsWrapper extends parent {\n            constructor(...args) {\n                const out = super(...args);\n                // copy instance properties\n                // mixins[i].apply(this) does not work in ES2015+ classes\n                mixins.forEach((mixin) => {\n                    if (typeof mixin._mixinInstance_ === 'undefined') {\n                        mixin._mixinInstance_ = new mixin();\n                    }\n                    defineProps(this, mixin._mixinInstance_, options, 'instance');\n                });\n                return out;\n            }\n        };\n    }\n    while (++i < len) {\n        assignClasses(target, mixins[i], options);\n    }\n    return target;\n}\n// check mixin usage\n/* export */ function mixedBy(instance, mixin) {\n    const ctor = getProto(instance).constructor;\n    if (typeof ctor._mixins_ === 'object' && typeof ctor._mixins_.has === 'function') {\n        return ctor._mixins_.has(mixin);\n    }\n    return false;\n}\n// check mixin usage and instanceof\n/* export */ function instanceOf(instance, mixin) {\n    return mixedBy(instance, mixin) || instance instanceof mixin;\n}\nconst define = (target, mixin, propertyName) => {\n    Object.defineProperty(target, propertyName, Object.getOwnPropertyDescriptor(mixin, propertyName));\n};\n// main object\nconst mixiner = {\n    VERSION,\n    Mixins,\n    options,\n    mix,\n    extend,\n    mixedBy,\n    instanceOf,\n    config: {\n        define,\n        resolve: ({ target, mixin, /* options, type, */ propertyName }) => {\n            define(target, mixin, propertyName);\n        },\n        ignoreProtoProps: [\n            'constructor',\n            'apply',\n            'bind',\n            'call',\n            'isGenerator',\n            'toSource',\n            'toString',\n            '__proto__',\n        ],\n        ignoreStaticProps: [\n            'arguments',\n            'arity',\n            'caller',\n            'length',\n            'name',\n            'displayName',\n            'prototype',\n            '__proto__',\n            '_mixinInstance_',\n        ],\n        ignoreInstanceProps: ['__proto__'],\n    },\n};\nmixiner.default = mixiner; // set options for current mixining\n/* export default mixiner; */\n/* export */ function options(options) {\n    const opts = assign(assign({}, mixiner.config), options);\n    return {\n        mix: function mix(...args) {\n            return mixIn(opts, args);\n        },\n        extend: function extend(parent, ...args) {\n            return mixIn(opts, args, parent);\n        },\n    };\n}\n// extends parent with mixins implementation\n/* export */ function extend(parent, ...args) {\n    return mixIn(mixiner.config, args, parent);\n}\n// mixins implementation\n/* export */ function mix(...args) {\n    return mixIn(mixiner.config, args);\n}\n// internal method, used for resolving conflicts in global scope (browser window etc.)\nmixiner.resolveConflict = (root) => {\n    const oldParts = root.mixiner.VERSION.split('.').map(parseInt);\n    const newParts = mixiner.VERSION.split('.').map(parseInt);\n    let i = -1;\n    while (++i < 3) {\n        if (newParts[i] > oldParts[i]) {\n            return mixiner;\n        }\n        else if (newParts[i] < oldParts[i]) {\n            return root.mixiner;\n        }\n    }\n    return root.mixiner;\n};\n\n  return mixiner;\n});\n\n\n"]}
{"version":3,"sources":["mixiner.js"],"names":["define","amd","module","exports","mixiner","VERSION","Mixins","resolveConflict","Error","window","Object","getOwnPropertyNames","getOwnPropertySymbols","concat","ignoreProtoProps","ignoreStaticProps","ignoreInstanceProps","length","indexOf","resolve","target","mixin","options","type","propertyName","call","_mixins_","defineProperty","value","configurable","writable","setParent","Array","isArray","collection","forEach","prototype","add","keys","constructor","_mixinInstance_","has","config","mix","extend","push","parent","getPrototypeOf","__proto__","hasOwnProperty","getOwnPropertyDescriptor","mixedBy","instanceOf","default","split","map","parseInt"],"mappings":"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","file":"mixiner.min.js","sourcesContent":["/**\n * @license\n * Mixiner <https://shvabuk.github.io/mixiner>\n * Released under MIT license <https://shvabuk.github.io/mixiner/LICENSE.txt>\n * Copyright Shvab Ostap\n */\n\n((root, factory) => {\n  if (typeof define === 'function' && define.amd) {\n    // AMD\n    define([], factory);\n  } else if (typeof module === 'object' && module.exports) {\n    // Node. CommonJS-like\n    const mixiner = factory();\n    module.exports = mixiner;\n    // CommonJS exports\n    module.exports.mixiner = mixiner;\n  } else {\n    const mixiner = factory();\n\n    if (typeof root.mixiner === 'undefined') {\n      root.mixiner = mixiner;\n    } else if (\n      // duck type checking\n      typeof root.mixiner === 'object' &&\n      typeof root.mixiner.VERSION === 'string' &&\n      typeof root.mixiner.Mixins === 'function'\n    ) {\n      root.mixiner = mixiner.resolveConflict(root);\n    } else {\n      throw Error(`Global scope property \"mixiner\" alredy in use`);\n    }\n  }\n})(typeof window !== 'undefined' ? window : this, () => {\n\n\"use strict\";\nconst VERSION = '1.0.0';\n// storage of mixins, defined in constructor._mixins_\n/* export */ class Mixins {\n    constructor() {\n        this.collection = [];\n        this.VERSION = VERSION;\n    }\n    add(mixin) {\n        this.collection.push(mixin);\n    }\n    setParent(mixins) {\n        this.parent = mixins;\n    }\n    has(mixin) {\n        return (this.collection.indexOf(mixin) > -1 ||\n            (typeof this.parent !== 'undefined' && this.parent.has(mixin)));\n    }\n}\n// get object prototype\nconst getProto = Object.getPrototypeOf || (obj => obj.__proto__);\n// get props names, used in mixin\nfunction getOwnPropsKeys(target) {\n    const keys = Object.getOwnPropertyNames(target);\n    if (typeof Object.getOwnPropertySymbols !== 'undefined') {\n        return [].concat(keys, Object.getOwnPropertySymbols(target));\n    }\n    return keys;\n}\n// define mixin (static, prototype or instance) properties\nfunction defineProps(target, mixin, options, type) {\n    const mixinNames = getOwnPropsKeys(mixin);\n    const targetNames = getOwnPropsKeys(target);\n    const ignore = type === 'proto'\n        ? options.ignoreProtoProps\n        : type === 'static' ? options.ignoreStaticProps : options.ignoreInstanceProps;\n    let i = mixinNames.length;\n    while (i--) {\n        // ignore props from ignorelist\n        if (ignore.indexOf(mixinNames[i]) > -1) {\n            continue;\n        }\n        // check conflicts\n        // custom resolve\n        if (targetNames.indexOf(mixinNames[i]) > -1) {\n            options.resolve({\n                target,\n                mixin,\n                options,\n                type,\n                propertyName: mixinNames[i],\n            });\n        }\n        else {\n            // default define\n            options.define(target, mixin, mixinNames[i]);\n        }\n    }\n}\n// wrapper according to https://github.com/airbnb/javascript#objects--prototype-builtins\nconst has = Object.prototype.hasOwnProperty;\n// define static and prototype properties\nfunction assignClasses(target, mixin, options) {\n    // add mixins links\n    if (!has.call(target, '_mixins_')) {\n        const parentMixins = target._mixins_;\n        Object.defineProperty(target, '_mixins_', {\n            value: new Mixins(),\n            configurable: true,\n            writable: true,\n        });\n        if (typeof parentMixins !== 'undefined') {\n            target._mixins_.setParent(parentMixins);\n        }\n    }\n    // add mixined in mixin mixins\n    if (typeof mixin._mixins_ === 'object' && Array.isArray(mixin._mixins_.collection)) {\n        mixin._mixins_.collection.forEach((parentMixin) => assignClasses(target, parentMixin, options));\n    }\n    // copy prototype properties\n    defineProps(target.prototype, mixin.prototype, options, 'proto');\n    // copy constructor properties\n    defineProps(target, mixin, options, 'static');\n    target._mixins_.add(mixin);\n}\n// copy options properties, just primitive Object.assign polyfill for IE9\nfunction assign(target, source) {\n    const keys = Object.keys(source);\n    let i = keys.length;\n    while (i--) {\n        target[keys[i]] = source[keys[i]];\n    }\n    return target;\n}\n// mixin function\n// at this moment loop inside of constructor increse object creation speed\n// during V8 engine optimization\nfunction mixIn(options, mixins, parent) {\n    const len = mixins.length;\n    let i = -1;\n    let target;\n    if (typeof parent === 'undefined') {\n        target = class MixinsWrapper {\n            constructor() {\n                mixins.forEach((mixin) => {\n                    // copy instance properties\n                    // mixins[i].apply(this) does not work in ES2015+ classes\n                    if (typeof mixin._mixinInstance_ === 'undefined') {\n                        mixin._mixinInstance_ = new mixin();\n                    }\n                    defineProps(this, mixin._mixinInstance_, options, 'instance');\n                });\n            }\n        };\n    }\n    else {\n        // ignore first mixin, it is parent class\n        target = class MixinsWrapper extends parent {\n            constructor(...args) {\n                const out = super(...args);\n                // copy instance properties\n                // mixins[i].apply(this) does not work in ES2015+ classes\n                mixins.forEach((mixin) => {\n                    if (typeof mixin._mixinInstance_ === 'undefined') {\n                        mixin._mixinInstance_ = new mixin();\n                    }\n                    defineProps(this, mixin._mixinInstance_, options, 'instance');\n                });\n                return out;\n            }\n        };\n    }\n    while (++i < len) {\n        assignClasses(target, mixins[i], options);\n    }\n    return target;\n}\n// check mixin usage\n/* export */ function mixedBy(instance, mixin) {\n    const ctor = getProto(instance).constructor;\n    if (typeof ctor._mixins_ === 'object' && typeof ctor._mixins_.has === 'function') {\n        return ctor._mixins_.has(mixin);\n    }\n    return false;\n}\n// check mixin usage and instanceof\n/* export */ function instanceOf(instance, mixin) {\n    return mixedBy(instance, mixin) || instance instanceof mixin;\n}\nconst define = (target, mixin, propertyName) => {\n    Object.defineProperty(target, propertyName, Object.getOwnPropertyDescriptor(mixin, propertyName));\n};\n// main object\nconst mixiner = {\n    VERSION,\n    Mixins,\n    options,\n    mix,\n    extend,\n    mixedBy,\n    instanceOf,\n    config: {\n        define,\n        resolve: ({ target, mixin, /* options, type, */ propertyName }) => {\n            define(target, mixin, propertyName);\n        },\n        ignoreProtoProps: [\n            'constructor',\n            'apply',\n            'bind',\n            'call',\n            'isGenerator',\n            'toSource',\n            'toString',\n            '__proto__',\n        ],\n        ignoreStaticProps: [\n            'arguments',\n            'arity',\n            'caller',\n            'length',\n            'name',\n            'displayName',\n            'prototype',\n            '__proto__',\n            '_mixinInstance_',\n        ],\n        ignoreInstanceProps: ['__proto__'],\n    },\n};\nmixiner.default = mixiner; // set options for current mixining\n/* export default mixiner; */\n/* export */ function options(options) {\n    const opts = assign(assign({}, mixiner.config), options);\n    return {\n        mix: function mix(...args) {\n            return mixIn(opts, args);\n        },\n        extend: function extend(parent, ...args) {\n            return mixIn(opts, args, parent);\n        },\n    };\n}\n// extends parent with mixins implementation\n/* export */ function extend(parent, ...args) {\n    return mixIn(mixiner.config, args, parent);\n}\n// mixins implementation\n/* export */ function mix(...args) {\n    return mixIn(mixiner.config, args);\n}\n// internal method, used for resolving conflicts in global scope (browser window etc.)\nmixiner.resolveConflict = (root) => {\n    const oldParts = root.mixiner.VERSION.split('.').map(parseInt);\n    const newParts = mixiner.VERSION.split('.').map(parseInt);\n    let i = -1;\n    while (++i < 3) {\n        if (newParts[i] > oldParts[i]) {\n            return mixiner;\n        }\n        else if (newParts[i] < oldParts[i]) {\n            return root.mixiner;\n        }\n    }\n    return root.mixiner;\n};\n\n  return mixiner;\n});\n\n\n"]}
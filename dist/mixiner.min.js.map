{"version":3,"sources":["mixiner.js"],"names":["factory","module","exports","v","require","undefined","define","amd","mixiner","mixin","baseCtor","target","keys","Object","getOwnPropertyNames","getOwnPropertySymbols","concat","getOwnPropsKeys","prototype","filter","name","forEach","defineProperty","propertyName","getOwnPropertyDescriptor","VERSION","default"],"mappings":";;;;;;CAOA,SAAWA,GACP,GAAsB,iBAAXC,QAAiD,iBAAnBA,OAAOC,QAAsB,CAClE,IAAIC,EAAIH,EAAQI,QAASF,cACfG,IAANF,IAAiBF,OAAOC,QAAUC,OACb,mBAAXG,QAAyBA,OAAOC,KAC9CD,QAAQ,UAAW,WAAYN,IALvC,CAOG,SAAUI,EAASF,GAClB,aAcA,IAAIM,EAAU,SAAiBC,GAC3B,OAAO,SAAUC,GAMb,OAdR,SAAyBC,GACrB,IAAIC,EAAOC,OAAOC,oBAAoBH,GACtC,YAA4C,IAAjCE,OAAOE,yBACJC,OAAOJ,EAAMC,OAAOE,sBAAsBJ,IAEjDC,EAIHK,CAAgBR,EAAMS,WAAWC,OAAO,SAAUC,GAC9C,MAAgB,gBAATA,IACRC,QAAQ,SAAUD,GAfbT,EAgBGD,EAASQ,UAhBJT,EAgBeA,EAAMS,UAfzCL,OAAOS,eAAeX,EADKY,EAgByBH,EAfRP,OAAOW,yBAAyBf,EAAOc,IADvF,IAAgBZ,EAAQF,EAAOc,IAkBhBb,IAKf,OAFAF,EAAQiB,QAtBM,QAuBdjB,EAAQkB,QAAUlB,EACXA","file":"mixiner.min.js","sourcesContent":["/**\n * @license\n * Mixiner <https://shvabuk.github.io/mixiner>\n * Released under MIT license <https://shvabuk.github.io/mixiner/LICENSE.txt>\n * Copyright Shvab Ostap\n */\n\n(function (factory) {\n    if (typeof module === \"object\" && typeof module.exports === \"object\") {\n        var v = factory(require, exports);\n        if (v !== undefined) module.exports = v;\n    } else if (typeof define === \"function\" && define.amd) {\n        define([\"require\", \"exports\"], factory);\n    }\n})(function (require, exports) {\n    \"use strict\";\n\n    var VERSION = '2.0.0';\n    function define(target, mixin, propertyName) {\n        Object.defineProperty(target, propertyName, Object.getOwnPropertyDescriptor(mixin, propertyName));\n    }\n    // get props names, used in mixin\n    function getOwnPropsKeys(target) {\n        var keys = Object.getOwnPropertyNames(target);\n        if (typeof Object.getOwnPropertySymbols !== 'undefined') {\n            return [].concat(keys, Object.getOwnPropertySymbols(target));\n        }\n        return keys;\n    }\n    var mixiner = function mixiner(mixin) {\n        return function (baseCtor) {\n            getOwnPropsKeys(mixin.prototype).filter(function (name) {\n                return name !== 'constructor';\n            }).forEach(function (name) {\n                define(baseCtor.prototype, mixin.prototype, name);\n            });\n            return baseCtor;\n        };\n    };\n    mixiner.VERSION = VERSION;\n    mixiner.default = mixiner;\n    return mixiner;\n});"]}